# Warning: this name must stay in sync with the badges referenced in the README
name: 'tests MSVC'

on:
  push:
    branches:
      - 'master'
  pull_request:
  schedule:
      - cron: "0 0 * * 6"  # Run every Saturday at midnight

jobs:
  msvc:

    runs-on: windows-latest
    env:
        VCPKG_TRIPLET: x64-windows
        VCPKG_INSTALL_PACKAGES: opengl-registry ffmpeg[ffmpeg,ffprobe] sdl2 shaderc spirv-cross
        # Use older version of vcpkg
        # Recent release of vcpkg introduced a regression, where shaderc shared library
        # is no longer supported
        # See https://github.com/microsoft/vcpkg/issues/16658
        VCPKG_SHADERC_COMMIT_ID: 09a647a5261e981cbbc8219292c838490ed0b06f
    strategy:
      matrix:
        include:
          - build_backend: ninja
          - build_backend: vs

    defaults:
      run:
        shell: pwsh

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Fix shaderc
        id: fix-shaderc
        run: |
          cd /mnt/c/vcpkg
          git fetch --unshallow
          git checkout ${{env.VCPKG_SHADERC_COMMIT_ID}} -- ports/shaderc

      - name: Get vcpkg cache key
        shell: bash
        id: get-vcpkg-cache-key
        run: |
          VCPKG_COMMIT_ID=$(git -C C:/vcpkg rev-parse HEAD)
          echo "::set-output name=key::$(echo $VCPKG_COMMIT_ID ${{env.VCPKG_TRIPLET}} ${{env.VCPKG_INSTALL_PACKAGES}} ${{env.VCPKG_SHADERC_COMMIT_ID}} | md5sum | cut -f1 -d" ")"

      - name: Restore vcpkg binary cache archives
        id: restore_vcpkg_binary_cache
        uses: actions/cache@v2
        with:
          path: C:\Users\runneradmin\AppData\Local\vcpkg\archives
          key: ${{ steps.get-vcpkg-cache-key.outputs.key }}

      - name: Install dependencies
        run: |
          wget https://sdk.lunarg.com/sdk/download/1.2.162.1/windows/VulkanSDK-1.2.162.1-Installer.exe
          ./VulkanSDK-1.2.162.1-Installer.exe /S
          cd C:\vcpkg
          .\vcpkg.exe install --triplet ${{env.VCPKG_TRIPLET}} ${{env.VCPKG_INSTALL_PACKAGES}}

      - name: Build (${{matrix.build_backend}})
        run: |
          .\scripts\msvc-env.ps1
          python.exe .\configure.py --debug-opts gpu_capture --build-backend ${{matrix.build_backend}}
          nmake

      - name: Python import and dylib runtime test
        run: |
          .\venv\Scripts\Activate.ps1
          python.exe -c "import pynodegl, pynodegl_utils"
          ngl-python.exe -h
