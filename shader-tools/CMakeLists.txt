cmake_minimum_required(VERSION 3.14)
project (shader-tools)

file (GLOB_RECURSE SHADER_TOOLS_SRC_FILES src/*.cpp src/*.h)

if ( ${CMAKE_SYSTEM_NAME} MATCHES "Linux") 
set(SHADER_TOOLS_BUILD_TYPE SHARED)
elseif (${CMAKE_SYSTEM_NAME} MATCHES "Windows")
set(SHADER_TOOLS_BUILD_TYPE STATIC)
endif()
add_library(shader_tools ${SHADER_TOOLS_BUILD_TYPE} ${SHADER_TOOLS_SRC_FILES})
target_compile_options(shader_tools PUBLIC ${NGFX_CFLAGS})
target_include_directories(shader_tools PUBLIC src ${JSON_INCLUDE_DIRS} ${NGFX_INCLUDE_DIRS})

if (NOT (${CMAKE_SYSTEM_NAME} MATCHES "Windows"))
target_link_libraries(shader_tools PUBLIC stdc++fs)
endif()

function(build_tool name)
file (GLOB_RECURSE TOOL_SOURCE_FILES tools/${name}*.cpp tools/${name}*.h)
add_executable(${name} ${TOOL_SOURCE_FILES})
target_include_directories(${name} PUBLIC src)
target_link_libraries(${name} shader_tools ngfx)
endfunction()

if (GRAPHICS_BACKEND_VULKAN)
build_tool(compile_shaders_vk)
elseif(GRAPHICS_BACKEND_DIRECT3D12)
build_tool(compile_shaders_dx12)
elseif(GRAPHICS_BACKEND_METAL)
build_tool(compile_shaders_mtl)
endif()
